{"ast":null,"code":"import _objectSpread from \"C:/Users/Andrius/Desktop/Slender-project/slender-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/Andrius/Desktop/Slender-project/slender-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nfunction animateVariant(visualElement, variant) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var resolved = resolveVariant(visualElement, variant, options.custom);\n  var _ref = resolved || {},\n    _ref$transition = _ref.transition,\n    transition = _ref$transition === void 0 ? visualElement.getDefaultTransition() || {} : _ref$transition;\n  if (options.transitionOverride) {\n    transition = options.transitionOverride;\n  }\n  /**\n   * If we have a variant, create a callback that runs it as an animation.\n   * Otherwise, we resolve a Promise immediately for a composable no-op.\n   */\n  var getAnimation = resolved ? function () {\n    return Promise.all(animateTarget(visualElement, resolved, options));\n  } : function () {\n    return Promise.resolve();\n  };\n  /**\n   * If we have children, create a callback that runs all their animations.\n   * Otherwise, we resolve a Promise immediately for a composable no-op.\n   */\n  var getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size ? function () {\n    var forwardDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var _transition = transition,\n      _transition$delayChil = _transition.delayChildren,\n      delayChildren = _transition$delayChil === void 0 ? 0 : _transition$delayChil,\n      staggerChildren = _transition.staggerChildren,\n      staggerDirection = _transition.staggerDirection;\n    return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n  } : function () {\n    return Promise.resolve();\n  };\n  /**\n   * If the transition explicitly defines a \"when\" option, we need to resolve either\n   * this animation or all children animations before playing the other.\n   */\n  var _transition2 = transition,\n    when = _transition2.when;\n  if (when) {\n    var _ref2 = when === \"beforeChildren\" ? [getAnimation, getChildAnimations] : [getChildAnimations, getAnimation],\n      _ref3 = _slicedToArray(_ref2, 2),\n      first = _ref3[0],\n      last = _ref3[1];\n    return first().then(function () {\n      return last();\n    });\n  } else {\n    return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n  }\n}\nfunction animateChildren(visualElement, variant) {\n  var delayChildren = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var staggerChildren = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var staggerDirection = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var options = arguments.length > 5 ? arguments[5] : undefined;\n  var animations = [];\n  var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n  var generateStaggerDuration = staggerDirection === 1 ? function () {\n    var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return i * staggerChildren;\n  } : function () {\n    var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return maxStaggerDuration - i * staggerChildren;\n  };\n  Array.from(visualElement.variantChildren).sort(sortByTreeOrder).forEach(function (child, i) {\n    child.notify(\"AnimationStart\", variant);\n    animations.push(animateVariant(child, variant, _objectSpread(_objectSpread({}, options), {}, {\n      delay: delayChildren + generateStaggerDuration(i)\n    })).then(function () {\n      return child.notify(\"AnimationComplete\", variant);\n    }));\n  });\n  return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n  return a.sortNodePosition(b);\n}\nexport { animateVariant, sortByTreeOrder };","map":{"version":3,"names":["resolveVariant","animateTarget","animateVariant","visualElement","variant","options","resolved","custom","transition","getDefaultTransition","transitionOverride","getAnimation","Promise","all","resolve","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","animateChildren","when","first","last","then","delay","animations","maxStaggerDuration","generateStaggerDuration","i","Array","from","sort","sortByTreeOrder","forEach","child","notify","push","a","b","sortNodePosition"],"sources":["C:/Users/Andrius/Desktop/Slender-project/slender-main/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs"],"sourcesContent":["import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}