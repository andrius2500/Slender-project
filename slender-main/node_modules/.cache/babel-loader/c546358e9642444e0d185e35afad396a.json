{"ast":null,"code":"import _slicedToArray from \"C:/Users/Andrius/Desktop/Slender-project/slender-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/Andrius/Desktop/Slender-project/slender-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/Andrius/Desktop/Slender-project/slender-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Andrius/Desktop/Slender-project/slender-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Andrius/Desktop/Slender-project/slender-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Andrius/Desktop/Slender-project/slender-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\nvar MeasureLayoutWithContext = /*#__PURE__*/function (_React__default$Compo) {\n  _inherits(MeasureLayoutWithContext, _React__default$Compo);\n  var _super = _createSuper(MeasureLayoutWithContext);\n  function MeasureLayoutWithContext() {\n    _classCallCheck(this, MeasureLayoutWithContext);\n    return _super.apply(this, arguments);\n  }\n  _createClass(MeasureLayoutWithContext, [{\n    key: \"componentDidMount\",\n    value:\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    function componentDidMount() {\n      var _this = this;\n      var _this$props = this.props,\n        visualElement = _this$props.visualElement,\n        layoutGroup = _this$props.layoutGroup,\n        switchLayoutGroup = _this$props.switchLayoutGroup,\n        layoutId = _this$props.layoutId;\n      var projection = visualElement.projection;\n      addScaleCorrector(defaultScaleCorrectors);\n      if (projection) {\n        if (layoutGroup.group) layoutGroup.group.add(projection);\n        if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n          switchLayoutGroup.register(projection);\n        }\n        projection.root.didUpdate();\n        projection.addEventListener(\"animationComplete\", function () {\n          _this.safeToRemove();\n        });\n        projection.setOptions(_objectSpread(_objectSpread({}, projection.options), {}, {\n          onExitComplete: function onExitComplete() {\n            return _this.safeToRemove();\n          }\n        }));\n      }\n      globalProjectionState.hasEverUpdated = true;\n    }\n  }, {\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate(prevProps) {\n      var _this2 = this;\n      var _this$props2 = this.props,\n        layoutDependency = _this$props2.layoutDependency,\n        visualElement = _this$props2.visualElement,\n        drag = _this$props2.drag,\n        isPresent = _this$props2.isPresent;\n      var projection = visualElement.projection;\n      if (!projection) return null;\n      /**\n       * TODO: We use this data in relegate to determine whether to\n       * promote a previous element. There's no guarantee its presence data\n       * will have updated by this point - if a bug like this arises it will\n       * have to be that we markForRelegation and then find a new lead some other way,\n       * perhaps in didUpdate\n       */\n      projection.isPresent = isPresent;\n      if (drag || prevProps.layoutDependency !== layoutDependency || layoutDependency === undefined) {\n        projection.willUpdate();\n      } else {\n        this.safeToRemove();\n      }\n      if (prevProps.isPresent !== isPresent) {\n        if (isPresent) {\n          projection.promote();\n        } else if (!projection.relegate()) {\n          /**\n           * If there's another stack member taking over from this one,\n           * it's in charge of the exit animation and therefore should\n           * be in charge of the safe to remove. Otherwise we call it here.\n           */\n          frame.postRender(function () {\n            var stack = projection.getStack();\n            if (!stack || !stack.members.length) {\n              _this2.safeToRemove();\n            }\n          });\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this3 = this;\n      var projection = this.props.visualElement.projection;\n      if (projection) {\n        projection.root.didUpdate();\n        queueMicrotask(function () {\n          if (!projection.currentAnimation && projection.isLead()) {\n            _this3.safeToRemove();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props3 = this.props,\n        visualElement = _this$props3.visualElement,\n        layoutGroup = _this$props3.layoutGroup,\n        promoteContext = _this$props3.switchLayoutGroup;\n      var projection = visualElement.projection;\n      if (projection) {\n        projection.scheduleCheckAfterUnmount();\n        if (layoutGroup && layoutGroup.group) layoutGroup.group.remove(projection);\n        if (promoteContext && promoteContext.deregister) promoteContext.deregister(projection);\n      }\n    }\n  }, {\n    key: \"safeToRemove\",\n    value: function safeToRemove() {\n      var safeToRemove = this.props.safeToRemove;\n      safeToRemove && safeToRemove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n  return MeasureLayoutWithContext;\n}(React__default.Component);\nfunction MeasureLayout(props) {\n  var _usePresence = usePresence(),\n    _usePresence2 = _slicedToArray(_usePresence, 2),\n    isPresent = _usePresence2[0],\n    safeToRemove = _usePresence2[1];\n  var layoutGroup = useContext(LayoutGroupContext);\n  return React__default.createElement(MeasureLayoutWithContext, _objectSpread(_objectSpread({}, props), {}, {\n    layoutGroup: layoutGroup,\n    switchLayoutGroup: useContext(SwitchLayoutGroupContext),\n    isPresent: isPresent,\n    safeToRemove: safeToRemove\n  }));\n}\nvar defaultScaleCorrectors = {\n  borderRadius: _objectSpread(_objectSpread({}, correctBorderRadius), {}, {\n    applyTo: [\"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomLeftRadius\", \"borderBottomRightRadius\"]\n  }),\n  borderTopLeftRadius: correctBorderRadius,\n  borderTopRightRadius: correctBorderRadius,\n  borderBottomLeftRadius: correctBorderRadius,\n  borderBottomRightRadius: correctBorderRadius,\n  boxShadow: correctBoxShadow\n};\nexport { MeasureLayout };","map":{"version":3,"names":["React__default","useContext","usePresence","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","correctBorderRadius","correctBoxShadow","addScaleCorrector","frame","MeasureLayoutWithContext","props","visualElement","layoutGroup","switchLayoutGroup","layoutId","projection","defaultScaleCorrectors","group","add","register","root","didUpdate","addEventListener","safeToRemove","setOptions","options","onExitComplete","hasEverUpdated","prevProps","layoutDependency","drag","isPresent","undefined","willUpdate","promote","relegate","postRender","stack","getStack","members","length","queueMicrotask","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","remove","deregister","Component","MeasureLayout","createElement","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow"],"sources":["C:/Users/Andrius/Desktop/Slender-project/slender-main/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs"],"sourcesContent":["import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n"],"mappings":";;;;;;AAAA,OAAOA,cAAc,IAAIC,UAAU,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,sDAAsD;AAClF,SAASC,kBAAkB,QAAQ,yCAAyC;AAC5E,SAASC,wBAAwB,QAAQ,+CAA+C;AACxF,SAASC,qBAAqB,QAAQ,oCAAoC;AAC1E,SAASC,mBAAmB,QAAQ,oDAAoD;AACxF,SAASC,gBAAgB,QAAQ,iDAAiD;AAClF,SAASC,iBAAiB,QAAQ,iDAAiD;AACnF,SAASC,KAAK,QAAQ,8BAA8B;AAAC,IAE/CC,wBAAwB;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAC1B;AACJ;AACA;AACA;AACA;IACI,6BAAoB;MAAA;MAChB,kBAAoE,IAAI,CAACC,KAAK;QAAtEC,aAAa,eAAbA,aAAa;QAAEC,WAAW,eAAXA,WAAW;QAAEC,iBAAiB,eAAjBA,iBAAiB;QAAEC,QAAQ,eAARA,QAAQ;MAC/D,IAAQC,UAAU,GAAKJ,aAAa,CAA5BI,UAAU;MAClBR,iBAAiB,CAACS,sBAAsB,CAAC;MACzC,IAAID,UAAU,EAAE;QACZ,IAAIH,WAAW,CAACK,KAAK,EACjBL,WAAW,CAACK,KAAK,CAACC,GAAG,CAACH,UAAU,CAAC;QACrC,IAAIF,iBAAiB,IAAIA,iBAAiB,CAACM,QAAQ,IAAIL,QAAQ,EAAE;UAC7DD,iBAAiB,CAACM,QAAQ,CAACJ,UAAU,CAAC;QAC1C;QACAA,UAAU,CAACK,IAAI,CAACC,SAAS,EAAE;QAC3BN,UAAU,CAACO,gBAAgB,CAAC,mBAAmB,EAAE,YAAM;UACnD,KAAI,CAACC,YAAY,EAAE;QACvB,CAAC,CAAC;QACFR,UAAU,CAACS,UAAU,iCACdT,UAAU,CAACU,OAAO;UACrBC,cAAc,EAAE;YAAA,OAAM,KAAI,CAACH,YAAY,EAAE;UAAA;QAAA,GAC3C;MACN;MACAnB,qBAAqB,CAACuB,cAAc,GAAG,IAAI;IAC/C;EAAC;IAAA;IAAA,OACD,iCAAwBC,SAAS,EAAE;MAAA;MAC/B,mBAA6D,IAAI,CAAClB,KAAK;QAA/DmB,gBAAgB,gBAAhBA,gBAAgB;QAAElB,aAAa,gBAAbA,aAAa;QAAEmB,IAAI,gBAAJA,IAAI;QAAEC,SAAS,gBAATA,SAAS;MACxD,IAAMhB,UAAU,GAAGJ,aAAa,CAACI,UAAU;MAC3C,IAAI,CAACA,UAAU,EACX,OAAO,IAAI;MACf;AACR;AACA;AACA;AACA;AACA;AACA;MACQA,UAAU,CAACgB,SAAS,GAAGA,SAAS;MAChC,IAAID,IAAI,IACJF,SAAS,CAACC,gBAAgB,KAAKA,gBAAgB,IAC/CA,gBAAgB,KAAKG,SAAS,EAAE;QAChCjB,UAAU,CAACkB,UAAU,EAAE;MAC3B,CAAC,MACI;QACD,IAAI,CAACV,YAAY,EAAE;MACvB;MACA,IAAIK,SAAS,CAACG,SAAS,KAAKA,SAAS,EAAE;QACnC,IAAIA,SAAS,EAAE;UACXhB,UAAU,CAACmB,OAAO,EAAE;QACxB,CAAC,MACI,IAAI,CAACnB,UAAU,CAACoB,QAAQ,EAAE,EAAE;UAC7B;AAChB;AACA;AACA;AACA;UACgB3B,KAAK,CAAC4B,UAAU,CAAC,YAAM;YACnB,IAAMC,KAAK,GAAGtB,UAAU,CAACuB,QAAQ,EAAE;YACnC,IAAI,CAACD,KAAK,IAAI,CAACA,KAAK,CAACE,OAAO,CAACC,MAAM,EAAE;cACjC,MAAI,CAACjB,YAAY,EAAE;YACvB;UACJ,CAAC,CAAC;QACN;MACJ;MACA,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,8BAAqB;MAAA;MACjB,IAAQR,UAAU,GAAK,IAAI,CAACL,KAAK,CAACC,aAAa,CAAvCI,UAAU;MAClB,IAAIA,UAAU,EAAE;QACZA,UAAU,CAACK,IAAI,CAACC,SAAS,EAAE;QAC3BoB,cAAc,CAAC,YAAM;UACjB,IAAI,CAAC1B,UAAU,CAAC2B,gBAAgB,IAAI3B,UAAU,CAAC4B,MAAM,EAAE,EAAE;YACrD,MAAI,CAACpB,YAAY,EAAE;UACvB;QACJ,CAAC,CAAC;MACN;IACJ;EAAC;IAAA;IAAA,OACD,gCAAuB;MACnB,mBAA2E,IAAI,CAACb,KAAK;QAA7EC,aAAa,gBAAbA,aAAa;QAAEC,WAAW,gBAAXA,WAAW;QAAqBgC,cAAc,gBAAjC/B,iBAAiB;MACrD,IAAQE,UAAU,GAAKJ,aAAa,CAA5BI,UAAU;MAClB,IAAIA,UAAU,EAAE;QACZA,UAAU,CAAC8B,yBAAyB,EAAE;QACtC,IAAIjC,WAAW,IAAIA,WAAW,CAACK,KAAK,EAChCL,WAAW,CAACK,KAAK,CAAC6B,MAAM,CAAC/B,UAAU,CAAC;QACxC,IAAI6B,cAAc,IAAIA,cAAc,CAACG,UAAU,EAC3CH,cAAc,CAACG,UAAU,CAAChC,UAAU,CAAC;MAC7C;IACJ;EAAC;IAAA;IAAA,OACD,wBAAe;MACX,IAAQQ,YAAY,GAAK,IAAI,CAACb,KAAK,CAA3Ba,YAAY;MACpBA,YAAY,IAAIA,YAAY,EAAE;IAClC;EAAC;IAAA;IAAA,OACD,kBAAS;MACL,OAAO,IAAI;IACf;EAAC;EAAA;AAAA,EAhGkCxB,cAAc,CAACiD,SAAS;AAkG/D,SAASC,aAAa,CAACvC,KAAK,EAAE;EAC1B,mBAAkCT,WAAW,EAAE;IAAA;IAAxC8B,SAAS;IAAER,YAAY;EAC9B,IAAMX,WAAW,GAAGZ,UAAU,CAACE,kBAAkB,CAAC;EAClD,OAAQH,cAAc,CAACmD,aAAa,CAACzC,wBAAwB,kCAAOC,KAAK;IAAEE,WAAW,EAAEA,WAAW;IAAEC,iBAAiB,EAAEb,UAAU,CAACG,wBAAwB,CAAC;IAAE4B,SAAS,EAAEA,SAAS;IAAER,YAAY,EAAEA;EAAY,GAAG;AACrN;AACA,IAAMP,sBAAsB,GAAG;EAC3BmC,YAAY,kCACL9C,mBAAmB;IACtB+C,OAAO,EAAE,CACL,qBAAqB,EACrB,sBAAsB,EACtB,wBAAwB,EACxB,yBAAyB;EAC5B,EACJ;EACDC,mBAAmB,EAAEhD,mBAAmB;EACxCiD,oBAAoB,EAAEjD,mBAAmB;EACzCkD,sBAAsB,EAAElD,mBAAmB;EAC3CmD,uBAAuB,EAAEnD,mBAAmB;EAC5CoD,SAAS,EAAEnD;AACf,CAAC;AAED,SAAS2C,aAAa"},"metadata":{},"sourceType":"module"}