{"ast":null,"code":"import _defineProperty from \"C:/Users/Andrius/Desktop/Slender-project/slender-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { mapEasingToNativeEasing } from './easing.mjs';\nfunction animateStyle(element, valueName, keyframes) {\n  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n    _ref$delay = _ref.delay,\n    delay = _ref$delay === void 0 ? 0 : _ref$delay,\n    duration = _ref.duration,\n    _ref$repeat = _ref.repeat,\n    repeat = _ref$repeat === void 0 ? 0 : _ref$repeat,\n    _ref$repeatType = _ref.repeatType,\n    repeatType = _ref$repeatType === void 0 ? \"loop\" : _ref$repeatType,\n    ease = _ref.ease,\n    times = _ref.times;\n  var keyframeOptions = _defineProperty({}, valueName, keyframes);\n  if (times) keyframeOptions.offset = times;\n  var easing = mapEasingToNativeEasing(ease);\n  /**\n   * If this is an easing array, apply to keyframes, not animation as a whole\n   */\n  if (Array.isArray(easing)) keyframeOptions.easing = easing;\n  return element.animate(keyframeOptions, {\n    delay: delay,\n    duration: duration,\n    easing: !Array.isArray(easing) ? easing : \"linear\",\n    fill: \"both\",\n    iterations: repeat + 1,\n    direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\"\n  });\n}\nexport { animateStyle };","map":{"version":3,"names":["mapEasingToNativeEasing","animateStyle","element","valueName","keyframes","delay","duration","repeat","repeatType","ease","times","keyframeOptions","offset","easing","Array","isArray","animate","fill","iterations","direction"],"sources":["C:/Users/Andrius/Desktop/Slender-project/slender-main/node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs"],"sourcesContent":["import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n"],"mappings":";AAAA,SAASA,uBAAuB,QAAQ,cAAc;AAEtD,SAASC,YAAY,CAACC,OAAO,EAAEC,SAAS,EAAEC,SAAS,EAA+E;EAAA,+EAAJ,CAAC,CAAC;IAAA,kBAAzEC,KAAK;IAALA,KAAK,2BAAG,CAAC;IAAEC,QAAQ,QAARA,QAAQ;IAAA,mBAAEC,MAAM;IAANA,MAAM,4BAAG,CAAC;IAAA,uBAAEC,UAAU;IAAVA,UAAU,gCAAG,MAAM;IAAEC,IAAI,QAAJA,IAAI;IAAEC,KAAK,QAALA,KAAK;EACpH,IAAMC,eAAe,uBAAMR,SAAS,EAAGC,SAAS,CAAE;EAClD,IAAIM,KAAK,EACLC,eAAe,CAACC,MAAM,GAAGF,KAAK;EAClC,IAAMG,MAAM,GAAGb,uBAAuB,CAACS,IAAI,CAAC;EAC5C;AACJ;AACA;EACI,IAAIK,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,EACrBF,eAAe,CAACE,MAAM,GAAGA,MAAM;EACnC,OAAOX,OAAO,CAACc,OAAO,CAACL,eAAe,EAAE;IACpCN,KAAK,EAALA,KAAK;IACLC,QAAQ,EAARA,QAAQ;IACRO,MAAM,EAAE,CAACC,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,GAAGA,MAAM,GAAG,QAAQ;IAClDI,IAAI,EAAE,MAAM;IACZC,UAAU,EAAEX,MAAM,GAAG,CAAC;IACtBY,SAAS,EAAEX,UAAU,KAAK,SAAS,GAAG,WAAW,GAAG;EACxD,CAAC,CAAC;AACN;AAEA,SAASP,YAAY"},"metadata":{},"sourceType":"module"}